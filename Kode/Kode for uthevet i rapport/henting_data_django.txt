def sanntid_first(request, ids):    
    # Henter siste objektet i databasen, dvs. det siste skyvet 
    objects = SensorData.objects.filter(id=SensorData.objects.last().id)

    # Lager dictionary for hver retning 
    # Legger inn dataene fra alle skyvene i en liste under key som x-, y- og zdata
    xdict = { "xdata" : [x for x in objects.values_list("xData")]}
    ydict = { "ydata" : [x for x in objects.values_list("yData")]}
    zdict = { "zdata" : [x for x in objects.values_list("zData")]}
    
    # Lager et dictionary med datoer og tidspunkter for hver skyv
    # bruker funksjonen __str__() for Ã¥ skrive ut datoer og tidspunkt som en streng 
    timedict = { "date" : [x[0].__str__() for x in objects.values_list("timestamp")]}
    
    # Lager et dictionary objekt med id til det siste skyvet
    iddict = { "id" : [SensorData.objects.last().id]}

    # dumps() konverterer dictionary objekter til JSON string format
    xdataJSON = dumps(xdict) 
    ydataJSON = dumps(ydict) 
    zdataJSON = dumps(zdict) 
    timeJSON = dumps(timedict)

    # Lastere opp nettsiden til brukeren i en HTML-fil (i dette tilfellet "graphtest_first.html") sammen med sensordata, tidspunkt og id fra det siste skyvet
    return render(request, 'elsysapp/graphtest_first.html', {'xdata': xdataJSON, 'ydata': ydataJSON, 'zdata':zdataJSON, 'timestamp':timeJSON, 'id':idJSON,}) 
